# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: On Release

on:
  release:
    types:
      - released



env:
  VSCE_PAT: ${{ secrets.VSCE_PAT }}
  GITHUB_TOKEN: ${{ secrets.PAT_ATTACH_TO_RELEASE }}

jobs:
  publish:
    name: Publish VSIX to Visual Studio Marketplace
    runs-on: ubuntu-latest
    steps:
      - name: Check if generated from pre-release
        if: github.event.release.assets[0] == null
        run: |
          echo "Release must be generated from pre-release. More information: https://github.com/Ed-Fi-Alliance-OSS/vscode-metaed-ide/blob/main/docs/DEVELOPMENT.md#release "
          exit 1
      
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Install vsce
        run: npm install --global @vscode/vsce

      - name: Retrieve VSIX from release
        run: |
          file="vscode-metaed.vsix"
          tag="${{ github.ref_name }}"

          url=$(echo '${{ toJson(github.event.release) }}' | jq --raw-output --arg t "$tag" 'select(.tag_name==$t) | .assets[] | .browser_download_url')
          curl $url --fail --output $file

      - name: Attach to release
        shell: pwsh
        run: |
          $release = "${{ github.ref_name }}"
          $repo = "${{ github.repository }}"
          $token = "${{ env.GITHUB_TOKEN }}"
          $uploadName = "vscode-metaed.vsix"

          $url = "https://api.github.com/repos/$repo/releases/$release/assets"

          $gh_headers = @{
              "Accept"        = "application/vnd.github+json"
              "Authorization" = "Bearer $token"
          }

          $response = Invoke-RestMethod -Uri $url -Headers $gh_headers
          echo $response

          $assetId = $response.id

          $url = "https://uploads.github.com/repos/$repo/releases/assets/$assetId"

          $gh_headers["Content-Type"] = "application/octet"
          Invoke-RestMethod -Uri "$($url)?name=$($uploadName)" `
              -Headers $gh_headers
              -OutFile $uploadName

      - name: Publish to the marketplace
        run: |
          cksum vscode-metaed.vsix
          ls -l vscode-metaed.vsix
          cat vscode-metaed.vsix
          npx vsce publish --allow-star-activation --packagePath vscode-metaed.vsix
