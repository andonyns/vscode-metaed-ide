# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: On Pre-Release
on:
  release:
    types:
      - prereleased

env:
  GITHUB_TOKEN: ${{ secrets.PAT_ATTACH_TO_RELEASE }}
  BUG_SNAG_KEY: ${{ secrets.BUG_SNAG_KEY}}

jobs:
  package:
    name: Build VSIX Package
    runs-on: ubuntu-latest
    outputs:
      hash-code: ${{ steps.hash-code.outputs.hash-code }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3.5.1
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Node modules cache
        id: modules-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Build Typescript
        run: npm run build

      - name: Install vsce
        run: npm install --global @vscode/vsce

      - name: Build vsix package
        run: |
          npm run package:clean
          npm run package:vsce

      - name: Generate hash code for VSIX file
        id: hash-code
        run: |
          # sha256sum returns "<hashcode>  <name of file". Split that and return only the <hashcode>.
          hash=$(sha256sum ./extension/vscode-metaed.vsix | awk '{split($0,a); print a[1]}')
          echo "hash-code=$hash" >> $GITHUB_OUTPUT

      - name: Upload vsix package
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: vscode-metaed.vsix
          path: extension/vscode-metaed.vsix
          retention-days: 1

  packages-attach:
    name: Attach Package to Release
    runs-on: ubuntu-latest
    needs: package
    permissions:
      actions: read
      contents: write
    steps:
      - name: Securely retrieve the package from artifacts
        uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@7f4fdb871876c23e455853d694197440c5a91506  # v1.5.0
        with:
          name: vscode-metaed.vsix
          path: vscode-metaed.vsix
          sha256: "${{ needs.package.outputs.hash-code }}"
      
      - run: cksum vscode-metaed.vsix

      - name: Attach to release
        shell: pwsh
        run: |
          $release = "${{ github.ref_name }}"
          $repo = "${{ github.repository }}"
          $token = "${{ env.GITHUB_TOKEN }}"
          $uploadName = "vscode-metaed.vsix"

          $url = "https://api.github.com/repos/$repo/releases/tags/$release"

          $gh_headers = @{
              "Accept"        = "application/vnd.github+json"
              "Authorization" = "Bearer $token"
          }

          $response = Invoke-RestMethod -Uri $url -Headers $gh_headers
          $releaseId = $response.id

          $url = "https://uploads.github.com/repos/$repo/releases/$releaseId/assets"

          $gh_headers["Content-Type"] = "application/octet"
          Invoke-RestMethod -Method POST `
              -Uri "$($url)?name=$($uploadName)" `
              -Headers $gh_headers `
              -InFile $uploadName

